<%@page import="com.jalios.jcms.mention.MentionManager"%><%
%><jalios:include target="EMPTY_HEADER_START" targetContext="empty" /><% 
  
  // Set Http Name headers
  String channelKeyWords = channel.getProperty("channel.keywords","");
  String publicationKeyWords = (String)request.getAttribute("metakeywords");
  String strKeyWords = Util.notEmpty(channelKeyWords) && Util.notEmpty(publicationKeyWords) ? 
  XmlUtil.normalize(channelKeyWords) + ", " + XmlUtil.normalize(publicationKeyWords) : 
  XmlUtil.normalize(channelKeyWords) + "" + XmlUtil.normalize(publicationKeyWords);

  String channelDescription = channel.getProperty("channel.description","");
  String publicationDescription = (String)request.getAttribute("metadescription");
  String strDescription = Util.notEmpty(channelDescription) && Util.notEmpty(publicationDescription) ? 
  XmlUtil.normalize(channelDescription) + " " + XmlUtil.normalize(publicationDescription) : 
  XmlUtil.normalize(channelDescription) + "" + XmlUtil.normalize(publicationDescription);
    
  jcmsContext.addHttpNameHeader("keywords",    strKeyWords);
  jcmsContext.addHttpNameHeader("description", strDescription);

  // Set Title / DotType / Zone
  String titleOfThePage = jcmsContext.getPageTitle("");
  String titlePrefix    = (String) request.getAttribute("title.prefix");
  String headTitle      = (titlePrefix == null ? (channel.getName() + " - ") : (!"".equals(titlePrefix) ? titlePrefix : "")) + titleOfThePage;
  String docType        = jcmsContext.getDocType(channel.getProperty("channel.doctype"));
  
  jcmsContext.setPageTitle(titleOfThePage);
  jcmsContext.setPageZone(jcmsContext.getPageZone("Public"));
    
  if (trace != null) {
    trace.put("title", titleOfThePage);
  }
  
  // Do not perform compile if site is not in devmode
  if (channel.getBooleanProperty("channel.dev-mode.enabled", true)){
  
	  // Handle LESS params
	  if (isLogged && hasParameter("less-compile")) {
	    boolean full = getBooleanParameter("less-compile",false);
	    boolean partial = getBooleanParameter("partial", false);
	    if (partial) {
	      File coreLess = new File(channel.getRealPath("css/jalios/core/core.less"));
	      coreLess.setLastModified(System.currentTimeMillis());
	    }
	    ResourceHelper.getInstance().compileLESS(full && !partial);
	  }
	  
	  if (isLogged && channel.getBooleanProperty("channel.less-compile.auto",false)){
	    ResourceHelper.getInstance().compileLESS(false);
	  }
  }
  
  // Setup Headers
  jcmsContext.internalSetupEmptyHeader();
  
  // Setup Ajax Request
  if (Util.toBoolean(request.getAttribute("RegiserAjaxContext"),true)){
    AjaxManager.getInstance().registerContext(jcmsContext);
  }
    
  // Warn user in fail safe mode
  if (channel.isFailSafeMode()) {
    jcmsContext.addMsg(new JcmsMessage(JcmsMessage.Level.WARN, glp("ui.com.msg.failsafe-mode")));
  }
  
  // HTML Tag hook
  String htmlXmlns  = Util.getString(request.getAttribute("channel.html.xmlns"),channel.getProperty("channel.html.xmlns"));
  htmlXmlns = Util.notEmpty(htmlXmlns) ? "xmlns=\""+ htmlXmlns +"\"" : "";
  
  String htmlLang   = JcmsUtil.getLangAttributes(userLang);
  String htmlDebug  = debug ? "debug='true'" : "";
  String htmlAttrib = "";
  Map<String,String> htmlAttribMap = (Map<String,String>) request.getAttribute("channel.html.attributes"); 
  if (htmlAttribMap != null){
    if (!htmlAttribMap.containsKey("class")){ htmlAttribMap.put("class","no-js"); }
    for (Iterator it = htmlAttribMap.entrySet().iterator() ; it.hasNext() ; ) { 
      Map.Entry itHeader = (Map.Entry) it.next();
      htmlAttrib += itHeader.getKey() + "=\"" + itHeader.getValue() +"\"";
    }
  }
  
%><%= docType %>
<html <%= htmlLang %> <%= htmlXmlns %> <%= htmlAttrib %> <%= htmlDebug %>>
<head>
  <base href="<%= ServletUtil.getBaseUrl(request) %>" <% if (hasParameter("basetarget")) { %>target="<%= encodeForHTMLAttribute(getAlphaNumParameter("basetarget", "_blank")) %>"<% } %> />
  
  <meta charset="UTF-8" />
  
  <% for (Iterator it = jcmsContext.getHttpEquivHeaders().entrySet().iterator() ; it.hasNext() ; ) { Map.Entry itHeader = (Map.Entry) it.next(); %>
  <%= JcmsUtil.getXHtmlMetaHttpEquivTag(String.valueOf(itHeader.getKey()), String.valueOf(itHeader.getValue())) %><% } %>

  
  <% for (Iterator it = jcmsContext.getHttpNameHeaders().entrySet().iterator() ; it.hasNext() ; ) {  Map.Entry itHeader = (Map.Entry) it.next(); %>
  <%= JcmsUtil.getXHtmlMetaTag(String.valueOf(itHeader.getKey()), String.valueOf(itHeader.getValue())) %><% } %>
  
  <title><%= Util.html2Ascii(headTitle) %></title>

  <% for (Iterator it = jcmsContext.getFinalCSSMap().entrySet().iterator() ; it.hasNext() ; ) { 
    Map.Entry itHeader = (Map.Entry) it.next();
    String css   = Util.getString(itHeader.getKey(),"");
    String media = Util.getString(itHeader.getValue(), "all");
    // FIXME: StartsWith CSSPacker
    String rel   = css.endsWith(".less") ? "stylesheet/less" : "stylesheet";
  %>
  <link rel="<%= rel %>" href="<%= css %>" type="text/css" media="<%= media %>" /><% } %>
  
  <style type="text/css" media="all">
    <!--  <% if (Util.notEmpty(jcmsContext.getStyleHeaders())) { for (Iterator it = jcmsContext.getStyleHeaders().entrySet().iterator() ; it.hasNext() ; ) { Map.Entry itHeader = (Map.Entry) it.next(); %>
      <%= itHeader.getKey() %><% }} %>
      
      .js .wdglang-<%= channel.getLanguage() %> { display: block; }
    -->
  </style>
  
  <script type="text/javascript" <%= cspNonceAttribute %>>
  /* <![CDATA[ */
    document._contextPath = '<%= ServletUtil.getContextPath(request) %>';
  /* ]]> */
  </script>
  
  <!--[if IE 8]>
  <script src="js/lib/respond/respond.min.js"></script>
  <![endif]-->  
  
  <% String favIcon = jcmsContext.workaroundBrowserBaseHrefBug(channel.getProperty("channel.favicon"));
     if (Util.notEmpty(favIcon)){ %><link rel="shortcut icon" href='<%= favIcon %>' /><% } %>
  
  <% for (Iterator it = jcmsContext.getCustomHeaders().iterator() ; it.hasNext() ; ) { %>
  <%= Util.getString(it.next(),"") %><% } %>
     
  <%@ include file="/custom/jcms/doCustomHeader.jsp" %>
  
  <%-- *** PLUGINS *************** --%>
  <jalios:include target="EMPTY_HEADER" targetContext="header" />
</head>
<%
{
  String classValues = Util.getString(jcmsContext.getBodyAttributes().get("class"), "");
  classValues += " body site-" + Util.buildID(channel.getName());
  classValues = classValues + " browser-" + jcmsContext.getBrowser().getBrowserShortName();
  if (jcmsContext.getBrowser().supportCSS3()) {
    classValues += " browser-css3";
  }
  if (!TTCardManager.getInstance().isTTCardEnabled()) {
    classValues += " jcms-ttcard-enabled";
  }
  
  if (!MentionManager.getInstance().isMentionEnabled()) {
    classValues += " jcms-mention-disabled";
  }
    
  classValues += " WS_"+workspace.getId();
    
  jcmsContext.addBodyAttributes("class", classValues);
}
%>
<body <% for (Iterator it = jcmsContext.getBodyAttributes().entrySet().iterator() ; it.hasNext() ; ) { Map.Entry itHeader = (Map.Entry) it.next(); %> <%= itHeader.getKey() %>="<%= itHeader.getValue() %>"<%}%>><script type="text/javascript" <%= cspNonceAttribute %>>document.body.className = document.body.className + ' js'</script><%
  boolean jcmsShieldEnabled = Util.toBoolean(request.getAttribute("com.jalios.jcms.JCMS_JS_SHIELD"), false);
  if (jcmsShieldEnabled) { %>
<div id="jcmsShield" style="position: absolute; background: url('s.gif'); z-index: 4000; width:3500px; height:3500px;"><jalios:icon src="progress-anim" alt='<%= glp("ui.work.form.txt.wait") %>'/></div><%
  }
%>
<a id="top" style="display:block;"></a>
<% request.setAttribute("doEmptyHeader-done", Boolean.TRUE); %>
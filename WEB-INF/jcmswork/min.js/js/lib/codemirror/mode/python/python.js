(function(a){if(typeof exports=="object"&&typeof module=="object"){a(require("../../lib/codemirror"))}else{if(typeof define=="function"&&define.amd){define(["../../lib/codemirror"],a)}else{a(CodeMirror)}}})(function(a){a.defineMode("python",function(o,x){var e="error";function s(C){return new RegExp("^(("+C.join(")|(")+"))\\b")}var r=x.singleOperators||new RegExp("^[\\+\\-\\*/%&|\\^~<>!]");var t=x.singleDelimiters||new RegExp("^[\\(\\)\\[\\]\\{\\}@,:`=;\\.]");var c=x.doubleOperators||new RegExp("^((==)|(!=)|(<=)|(>=)|(<>)|(<<)|(>>)|(//)|(\\*\\*))");var m=x.doubleDelimiters||new RegExp("^((\\+=)|(\\-=)|(\\*=)|(%=)|(/=)|(&=)|(\\|=)|(\\^=))");var z=x.tripleDelimiters||new RegExp("^((//=)|(>>=)|(<<=)|(\\*\\*=))");var l=x.identifiers||new RegExp("^[_A-Za-z][_A-Za-z0-9]*");var g=x.hangingIndent||x.indentUnit;var h=s(["and","or","not","is","in"]);var w=["as","assert","break","class","continue","def","del","elif","else","except","finally","for","from","global","if","import","lambda","pass","raise","return","try","while","with","yield"];var u=["abs","all","any","bin","bool","bytearray","callable","chr","classmethod","compile","complex","delattr","dict","dir","divmod","enumerate","eval","filter","float","format","frozenset","getattr","globals","hasattr","hash","help","hex","id","input","int","isinstance","issubclass","iter","len","list","locals","map","max","memoryview","min","next","object","oct","open","ord","pow","property","range","repr","reversed","round","set","setattr","slice","sorted","staticmethod","str","sum","super","tuple","type","vars","zip","__import__","NotImplemented","Ellipsis","__debug__"];var f={builtins:["apply","basestring","buffer","cmp","coerce","execfile","file","intern","long","raw_input","reduce","reload","unichr","unicode","xrange","False","True","None"],keywords:["exec","print"]};var d={builtins:["ascii","bytes","exec","print"],keywords:["nonlocal","False","True","None"]};if(x.extra_keywords!=undefined){w=w.concat(x.extra_keywords)}if(x.extra_builtins!=undefined){u=u.concat(x.extra_builtins)}if(!!x.version&&parseInt(x.version,10)===3){w=w.concat(d.keywords);u=u.concat(d.builtins);var p=new RegExp("^(([rb]|(br))?('{3}|\"{3}|['\"]))","i")}else{w=w.concat(f.keywords);u=u.concat(f.builtins);var p=new RegExp("^(([rub]|(ur)|(br))?('{3}|\"{3}|['\"]))","i")}var n=s(w);var i=s(u);var y=null;function B(I,H){if(I.sol()){var D=H.scopes[0].offset;if(I.eatSpace()){var F=I.indentation();if(F>D){y="indent"}else{if(F<D){y="dedent"}}return null}else{if(D>0){j(I,H)}}}if(I.eatSpace()){return null}var G=I.peek();if(G==="#"){I.skipToEnd();return"comment"}if(I.match(/^[0-9\.]/,false)){var E=false;if(I.match(/^\d*\.\d+(e[\+\-]?\d+)?/i)){E=true}if(I.match(/^\d+\.\d*/)){E=true}if(I.match(/^\.\d+/)){E=true}if(E){I.eat(/J/i);return"number"}var C=false;if(I.match(/^0x[0-9a-f]+/i)){C=true}if(I.match(/^0b[01]+/i)){C=true}if(I.match(/^0o[0-7]+/i)){C=true}if(I.match(/^[1-9]\d*(e[\+\-]?\d+)?/)){I.eat(/J/i);C=true}if(I.match(/^0(?![\dx])/i)){C=true}if(C){I.eat(/L/i);return"number"}}if(I.match(p)){H.tokenize=v(I.current());return H.tokenize(I,H)}if(I.match(z)||I.match(m)){return null}if(I.match(c)||I.match(r)||I.match(h)){return"operator"}if(I.match(t)){return null}if(I.match(n)){return"keyword"}if(I.match(i)){return"builtin"}if(I.match(/^(self|cls)\b/)){return"variable-2"}if(I.match(l)){if(H.lastToken=="def"||H.lastToken=="class"){return"def"}return"variable"}I.next();return e}function v(C){while("rub".indexOf(C.charAt(0).toLowerCase())>=0){C=C.substr(1)}var E=C.length==1;var D="string";function F(H,G){while(!H.eol()){H.eatWhile(/[^'"\\]/);if(H.eat("\\")){H.next();if(E&&H.eol()){return D}}else{if(H.match(C)){G.tokenize=B;return D}else{H.eat(/['"]/)}}}if(E){if(x.singleLineStringErrors){return e}else{G.tokenize=B}}return D}F.isString=true;return F}function q(G,F,E){E=E||"py";var C=0;if(E==="py"){if(F.scopes[0].type!=="py"){F.scopes[0].offset=G.indentation();return}for(var D=0;D<F.scopes.length;++D){if(F.scopes[D].type==="py"){C=F.scopes[D].offset+o.indentUnit;break}}}else{if(G.match(/\s*($|#)/,false)){C=G.indentation()+g}else{C=G.column()+G.current().length}}F.scopes.unshift({offset:C,type:E})}function j(H,G,E){E=E||"py";if(G.scopes.length==1){return}if(G.scopes[0].type==="py"){var D=H.indentation();var F=-1;for(var C=0;C<G.scopes.length;++C){if(D===G.scopes[C].offset){F=C;break}}if(F===-1){return true}while(G.scopes[0].offset!==D){G.scopes.shift()}return false}else{if(E==="py"){G.scopes[0].offset=H.indentation();return false}else{if(G.scopes[0].type!=E){return true}G.scopes.shift();return false}}}function A(G,E){y=null;var D=E.tokenize(G,E);var F=G.current();if(F==="."){D=G.match(l,false)?null:e;if(D===null&&E.lastStyle==="meta"){D="meta"}return D}if(F==="@"){return G.match(l,false)?"meta":e}if((D==="variable"||D==="builtin")&&E.lastStyle==="meta"){D="meta"}if(F==="pass"||F==="return"){E.dedent+=1}if(F==="lambda"){E.lambda=true}if((F===":"&&!E.lambda&&E.scopes[0].type=="py")||y==="indent"){q(G,E)}var C="[({".indexOf(F);if(C!==-1){q(G,E,"])}".slice(C,C+1))}if(y==="dedent"){if(j(G,E)){return e}}C="])}".indexOf(F);if(C!==-1){if(j(G,E,F)){return e}}if(E.dedent>0&&G.eol()&&E.scopes[0].type=="py"){if(E.scopes.length>1){E.scopes.shift()}E.dedent-=1}return D}var k={startState:function(C){return{tokenize:B,scopes:[{offset:C||0,type:"py"}],lastStyle:null,lastToken:null,lambda:false,dedent:0}},token:function(F,D){var C=A(F,D);D.lastStyle=C;var E=F.current();if(E&&C){D.lastToken=E}if(F.eol()&&D.lambda){D.lambda=false}return C},indent:function(C){if(C.tokenize!=B){return C.tokenize.isString?a.Pass:0}return C.scopes[0].offset},lineComment:"#",fold:"indent"};return k});a.defineMIME("text/x-python","python");var b=function(c){return c.split(" ")};a.defineMIME("text/x-cython",{name:"python",extra_keywords:b("by cdef cimport cpdef ctypedef enum exceptextern gil include nogil property publicreadonly struct union DEF IF ELIF ELSE")})});